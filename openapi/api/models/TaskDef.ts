/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TaskDef {
    'ownerApp'?: string;
    'createTime'?: number;
    'updateTime'?: number;
    'createdBy'?: string;
    'updatedBy'?: string;
    'accessPolicy'?: { [key: string]: string; };
    'name': string;
    'description'?: string;
    'retryCount'?: number;
    'timeoutSeconds': number;
    'inputKeys'?: Array<string>;
    'outputKeys'?: Array<string>;
    'timeoutPolicy'?: TaskDefTimeoutPolicyEnum;
    'retryLogic'?: TaskDefRetryLogicEnum;
    'retryDelaySeconds'?: number;
    'responseTimeoutSeconds'?: number;
    'concurrentExecLimit'?: number;
    'inputTemplate'?: { [key: string]: any; };
    'rateLimitPerFrequency'?: number;
    'rateLimitFrequencyInSeconds'?: number;
    'isolationGroupId'?: string;
    'executionNameSpace'?: string;
    'ownerEmail'?: string;
    'pollTimeoutSeconds'?: number;
    'backoffScaleFactor'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "ownerApp",
            "baseName": "ownerApp",
            "type": "string",
            "format": ""
        },
        {
            "name": "createTime",
            "baseName": "createTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "updateTime",
            "baseName": "updateTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedBy",
            "baseName": "updatedBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "accessPolicy",
            "baseName": "accessPolicy",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "retryCount",
            "baseName": "retryCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "timeoutSeconds",
            "baseName": "timeoutSeconds",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "inputKeys",
            "baseName": "inputKeys",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "outputKeys",
            "baseName": "outputKeys",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "timeoutPolicy",
            "baseName": "timeoutPolicy",
            "type": "TaskDefTimeoutPolicyEnum",
            "format": ""
        },
        {
            "name": "retryLogic",
            "baseName": "retryLogic",
            "type": "TaskDefRetryLogicEnum",
            "format": ""
        },
        {
            "name": "retryDelaySeconds",
            "baseName": "retryDelaySeconds",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "responseTimeoutSeconds",
            "baseName": "responseTimeoutSeconds",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "concurrentExecLimit",
            "baseName": "concurrentExecLimit",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "inputTemplate",
            "baseName": "inputTemplate",
            "type": "{ [key: string]: any; }",
            "format": ""
        },
        {
            "name": "rateLimitPerFrequency",
            "baseName": "rateLimitPerFrequency",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "rateLimitFrequencyInSeconds",
            "baseName": "rateLimitFrequencyInSeconds",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isolationGroupId",
            "baseName": "isolationGroupId",
            "type": "string",
            "format": ""
        },
        {
            "name": "executionNameSpace",
            "baseName": "executionNameSpace",
            "type": "string",
            "format": ""
        },
        {
            "name": "ownerEmail",
            "baseName": "ownerEmail",
            "type": "string",
            "format": ""
        },
        {
            "name": "pollTimeoutSeconds",
            "baseName": "pollTimeoutSeconds",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "backoffScaleFactor",
            "baseName": "backoffScaleFactor",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return TaskDef.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum TaskDefTimeoutPolicyEnum {
    Retry = 'RETRY',
    TimeOutWf = 'TIME_OUT_WF',
    AlertOnly = 'ALERT_ONLY'
}
export enum TaskDefRetryLogicEnum {
    Fixed = 'FIXED',
    ExponentialBackoff = 'EXPONENTIAL_BACKOFF',
    LinearBackoff = 'LINEAR_BACKOFF'
}

