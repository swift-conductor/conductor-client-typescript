/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SubWorkflowParams } from '../models/SubWorkflowParams';
import { TaskDef } from '../models/TaskDef';
import { HttpFile } from '../http/http';

export class WorkflowTask {
    'name': string;
    'taskReferenceName': string;
    'description'?: string;
    'inputParameters'?: { [key: string]: any; };
    'type'?: string;
    'dynamicTaskNameParam'?: string;
    'caseValueParam'?: string;
    'caseExpression'?: string;
    'scriptExpression'?: string;
    'decisionCases'?: { [key: string]: Array<WorkflowTask>; };
    'dynamicForkJoinTasksParam'?: string;
    'dynamicForkTasksParam'?: string;
    'dynamicForkTasksInputParamName'?: string;
    'defaultCase'?: Array<WorkflowTask>;
    'forkTasks'?: Array<Array<WorkflowTask>>;
    'startDelay'?: number;
    'subWorkflowParam'?: SubWorkflowParams;
    'joinOn'?: Array<string>;
    'sink'?: string;
    'optional'?: boolean;
    'taskDefinition'?: TaskDef;
    'rateLimited'?: boolean;
    'defaultExclusiveJoinTask'?: Array<string>;
    'asyncComplete'?: boolean;
    'loopCondition'?: string;
    'loopOver'?: Array<WorkflowTask>;
    'retryCount'?: number;
    'evaluatorType'?: string;
    'expression'?: string;
    'workflowTaskType'?: WorkflowTaskWorkflowTaskTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "taskReferenceName",
            "baseName": "taskReferenceName",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "inputParameters",
            "baseName": "inputParameters",
            "type": "{ [key: string]: any; }",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "dynamicTaskNameParam",
            "baseName": "dynamicTaskNameParam",
            "type": "string",
            "format": ""
        },
        {
            "name": "caseValueParam",
            "baseName": "caseValueParam",
            "type": "string",
            "format": ""
        },
        {
            "name": "caseExpression",
            "baseName": "caseExpression",
            "type": "string",
            "format": ""
        },
        {
            "name": "scriptExpression",
            "baseName": "scriptExpression",
            "type": "string",
            "format": ""
        },
        {
            "name": "decisionCases",
            "baseName": "decisionCases",
            "type": "{ [key: string]: Array<WorkflowTask>; }",
            "format": ""
        },
        {
            "name": "dynamicForkJoinTasksParam",
            "baseName": "dynamicForkJoinTasksParam",
            "type": "string",
            "format": ""
        },
        {
            "name": "dynamicForkTasksParam",
            "baseName": "dynamicForkTasksParam",
            "type": "string",
            "format": ""
        },
        {
            "name": "dynamicForkTasksInputParamName",
            "baseName": "dynamicForkTasksInputParamName",
            "type": "string",
            "format": ""
        },
        {
            "name": "defaultCase",
            "baseName": "defaultCase",
            "type": "Array<WorkflowTask>",
            "format": ""
        },
        {
            "name": "forkTasks",
            "baseName": "forkTasks",
            "type": "Array<Array<WorkflowTask>>",
            "format": ""
        },
        {
            "name": "startDelay",
            "baseName": "startDelay",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "subWorkflowParam",
            "baseName": "subWorkflowParam",
            "type": "SubWorkflowParams",
            "format": ""
        },
        {
            "name": "joinOn",
            "baseName": "joinOn",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "sink",
            "baseName": "sink",
            "type": "string",
            "format": ""
        },
        {
            "name": "optional",
            "baseName": "optional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "taskDefinition",
            "baseName": "taskDefinition",
            "type": "TaskDef",
            "format": ""
        },
        {
            "name": "rateLimited",
            "baseName": "rateLimited",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "defaultExclusiveJoinTask",
            "baseName": "defaultExclusiveJoinTask",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "asyncComplete",
            "baseName": "asyncComplete",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "loopCondition",
            "baseName": "loopCondition",
            "type": "string",
            "format": ""
        },
        {
            "name": "loopOver",
            "baseName": "loopOver",
            "type": "Array<WorkflowTask>",
            "format": ""
        },
        {
            "name": "retryCount",
            "baseName": "retryCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "evaluatorType",
            "baseName": "evaluatorType",
            "type": "string",
            "format": ""
        },
        {
            "name": "expression",
            "baseName": "expression",
            "type": "string",
            "format": ""
        },
        {
            "name": "workflowTaskType",
            "baseName": "workflowTaskType",
            "type": "WorkflowTaskWorkflowTaskTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WorkflowTask.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum WorkflowTaskWorkflowTaskTypeEnum {
    Custom = 'CUSTOM',
    Dynamic = 'DYNAMIC',
    ForkJoin = 'FORK_JOIN',
    ForkJoinDynamic = 'FORK_JOIN_DYNAMIC',
    Decision = 'DECISION',
    Switch = 'SWITCH',
    Join = 'JOIN',
    DoWhile = 'DO_WHILE',
    SubWorkflow = 'SUB_WORKFLOW',
    StartWorkflow = 'START_WORKFLOW',
    Event = 'EVENT',
    Wait = 'WAIT',
    Human = 'HUMAN',
    UserDefined = 'USER_DEFINED',
    Http = 'HTTP',
    Lambda = 'LAMBDA',
    Inline = 'INLINE',
    ExclusiveJoin = 'EXCLUSIVE_JOIN',
    Terminate = 'TERMINATE',
    KafkaPublish = 'KAFKA_PUBLISH',
    JsonJqTransform = 'JSON_JQ_TRANSFORM',
    SetVariable = 'SET_VARIABLE',
    Noop = 'NOOP'
}

